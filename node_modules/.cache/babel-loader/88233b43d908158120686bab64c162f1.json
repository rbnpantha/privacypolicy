{"ast":null,"code":"import _classCallCheck from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import moment from'moment';import{Formik,Form,Field,ErrorMessage}from'formik';import TodoDataService from'../../api/todo/TodoDataService.js';import AuthenticationService from'./AuthenticationService.js';var TodoComponent=/*#__PURE__*/function(_Component){_inherits(TodoComponent,_Component);function TodoComponent(props){var _this;_classCallCheck(this,TodoComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(TodoComponent).call(this,props));_this.state={id:_this.props.match.params.id,description:'',targetDate:moment(new Date()).format('YYYY-MM-DD')};_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));_this.validate=_this.validate.bind(_assertThisInitialized(_this));return _this;}_createClass(TodoComponent,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.state.id===-1){return;}var username=AuthenticationService.getLoggedInUserName();TodoDataService.retrieveTodo(username,this.state.id).then(function(response){return _this2.setState({description:response.data.description,targetDate:moment(response.data.targetDate).format('YYYY-MM-DD')});});}},{key:\"validate\",value:function validate(values){var errors={};if(!values.description){errors.description='Enter a Description';}else if(values.description.length<5){errors.description='Enter atleast 5 Characters in Description';}if(!moment(values.targetDate).isValid()){errors.targetDate='Enter a valid Target Date';}return errors;}},{key:\"onSubmit\",value:function onSubmit(values){var _this3=this;var username=AuthenticationService.getLoggedInUserName();var todo={id:this.state.id,description:values.description,targetDate:values.targetDate};if(this.state.id===-1){TodoDataService.createTodo(username,todo).then(function(){return _this3.props.history.push('/todos');});}else{TodoDataService.updateTodo(username,this.state.id,todo).then(function(){return _this3.props.history.push('/todos');});}console.log(values);}},{key:\"render\",value:function render(){var _this$state=this.state,description=_this$state.description,targetDate=_this$state.targetDate;//let targetDate = this.state.targetDate\nreturn React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Todo\"),React.createElement(\"div\",{className:\"container\"},React.createElement(Formik,{initialValues:{description:description,targetDate:targetDate},onSubmit:this.onSubmit,validateOnChange:false,validateOnBlur:false,validate:this.validate,enableReinitialize:true},function(props){return React.createElement(Form,null,React.createElement(ErrorMessage,{name:\"description\",component:\"div\",className:\"alert alert-warning\"}),React.createElement(ErrorMessage,{name:\"targetDate\",component:\"div\",className:\"alert alert-warning\"}),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Description\"),React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"description\"})),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Target Date\"),React.createElement(Field,{className:\"form-control\",type:\"date\",name:\"targetDate\"})),React.createElement(\"button\",{className:\"btn btn-success\",type:\"submit\"},\"Save\"));})));}}]);return TodoComponent;}(Component);export default TodoComponent;","map":{"version":3,"sources":["/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/src/components/todo/TodoComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","TodoDataService","AuthenticationService","TodoComponent","props","state","id","match","params","description","targetDate","Date","format","onSubmit","bind","validate","username","getLoggedInUserName","retrieveTodo","then","response","setState","data","values","errors","length","isValid","todo","createTodo","history","push","updateTodo","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass TodoComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            description: '',\n            targetDate: moment(new Date()).format('YYYY-MM-DD')\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        if (this.state.id === -1) {\n            return\n        }\n\n        let username = AuthenticationService.getLoggedInUserName()\n\n        TodoDataService.retrieveTodo(username, this.state.id)\n            .then(response => this.setState({\n                description: response.data.description,\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.description) {\n            errors.description = 'Enter a Description'\n        } else if (values.description.length < 5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n\n        if (!moment(values.targetDate).isValid()) {\n            errors.targetDate = 'Enter a valid Target Date'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let username = AuthenticationService.getLoggedInUserName()\n\n        let todo = {\n            id: this.state.id,\n            description: values.description,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            TodoDataService.createTodo(username, todo)\n                .then(() => this.props.history.push('/todos'))\n        } else {\n            TodoDataService.updateTodo(username, this.state.id, todo)\n                .then(() => this.props.history.push('/todos'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { description, targetDate } = this.state\n        //let targetDate = this.state.targetDate\n\n        return (\n            <div>\n                <h1>Todo</h1>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ description, targetDate }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <ErrorMessage name=\"targetDate\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TodoComponent"]},"metadata":{},"sourceType":"module"}