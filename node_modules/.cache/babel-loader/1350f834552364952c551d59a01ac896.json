{"ast":null,"code":"import _classCallCheck from\"/Users/rabin/DeployApp/InterviewGuideInGIT/InterviewGuide/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rabin/DeployApp/InterviewGuideInGIT/InterviewGuide/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rabin/DeployApp/InterviewGuideInGIT/InterviewGuide/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rabin/DeployApp/InterviewGuideInGIT/InterviewGuide/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/rabin/DeployApp/InterviewGuideInGIT/InterviewGuide/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/rabin/DeployApp/InterviewGuideInGIT/InterviewGuide/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import TodoDataService from'../../api/todo/TodoDataService.js';import AuthenticationService from'./AuthenticationService.js';import moment from'moment';var ListTodosComponent=/*#__PURE__*/function(_Component){_inherits(ListTodosComponent,_Component);function ListTodosComponent(props){var _this;_classCallCheck(this,ListTodosComponent);console.log('constructor');_this=_possibleConstructorReturn(this,_getPrototypeOf(ListTodosComponent).call(this,props));_this.state={todos:[],message:null};_this.deleteTodoClicked=_this.deleteTodoClicked.bind(_assertThisInitialized(_this));_this.updateTodoClicked=_this.updateTodoClicked.bind(_assertThisInitialized(_this));_this.addTodoClicked=_this.addTodoClicked.bind(_assertThisInitialized(_this));_this.refreshTodos=_this.refreshTodos.bind(_assertThisInitialized(_this));return _this;}_createClass(ListTodosComponent,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){console.log('componentWillUnmount');}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){console.log('shouldComponentUpdate');console.log(nextProps);console.log(nextState);return true;}},{key:\"componentDidMount\",value:function componentDidMount(){console.log('componentDidMount');this.refreshTodos();console.log(this.state);}},{key:\"refreshTodos\",value:function refreshTodos(){var _this2=this;var username=AuthenticationService.getLoggedInUserName();TodoDataService.retrieveAllTodos(username).then(function(response){//console.log(response);\n_this2.setState({todos:response.data});});}},{key:\"deleteTodoClicked\",value:function deleteTodoClicked(id){var _this3=this;var username=AuthenticationService.getLoggedInUserName();//console.log(id + \" \" + username);\nTodoDataService.deleteTodo(username,id).then(function(response){_this3.setState({message:\"Delete of todo \".concat(id,\" Successful\")});_this3.refreshTodos();});}},{key:\"addTodoClicked\",value:function addTodoClicked(){this.props.history.push(\"/todos/-1\");}},{key:\"updateTodoClicked\",value:function updateTodoClicked(id){console.log('update '+id);this.props.history.push(\"/todos/\".concat(id));// /todos/${id}\n// let username = AuthenticationService.getLoggedInUserName()\n// //console.log(id + \" \" + username);\n// TodoDataService.deleteTodo(username, id)\n//  .then (\n//      response => {\n//         this.setState({message : `Delete of todo ${id} Successful`})\n//         this.refreshTodos()\n//      }\n//  )\n}},{key:\"render\",value:function render(){var _this4=this;console.log('render');return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"List Todos\"),this.state.message&&React.createElement(\"div\",{class:\"alert alert-success\"},this.state.message),React.createElement(\"div\",{className:\"container\"},React.createElement(\"table\",{className:\"table\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"Description\"),React.createElement(\"th\",null,\"Target Date\"),React.createElement(\"th\",null,\"IsCompleted?\"),React.createElement(\"th\",null,\"Update\"),React.createElement(\"th\",null,\"Delete\"))),React.createElement(\"tbody\",null,this.state.todos.map(function(todo){return React.createElement(\"tr\",{key:todo.id},React.createElement(\"td\",null,todo.description),React.createElement(\"td\",null,moment(todo.targetDate).format('YYYY-MM-DD')),React.createElement(\"td\",null,todo.done.toString()),React.createElement(\"td\",null,React.createElement(\"button\",{className:\"btn btn-success\",onClick:function onClick(){return _this4.updateTodoClicked(todo.id);}},\"Update\")),React.createElement(\"td\",null,React.createElement(\"button\",{className:\"btn btn-warning\",onClick:function onClick(){return _this4.deleteTodoClicked(todo.id);}},\"Delete\")));}))),React.createElement(\"div\",{className:\"row\"},React.createElement(\"button\",{className:\"btn btn-success\",onClick:this.addTodoClicked},\"Add\"))));}}]);return ListTodosComponent;}(Component);export default ListTodosComponent;","map":{"version":3,"sources":["/Users/rabin/DeployApp/InterviewGuideInGIT/InterviewGuide/src/components/todo/ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","moment","ListTodosComponent","props","console","log","state","todos","message","deleteTodoClicked","bind","updateTodoClicked","addTodoClicked","refreshTodos","nextProps","nextState","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","data","id","deleteTodo","history","push","map","todo","description","targetDate","format","done","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\nimport moment from 'moment'\n\nclass ListTodosComponent extends Component {\n    constructor(props) {\n        console.log('constructor')\n        super(props)\n        this.state = {\n            todos: [],\n            message: null\n        }\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\n        this.addTodoClicked = this.addTodoClicked.bind(this)\n        this.refreshTodos = this.refreshTodos.bind(this)\n    }\n\n    componentWillUnmount() {\n        console.log('componentWillUnmount')\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('shouldComponentUpdate')\n        console.log(nextProps)\n        console.log(nextState)\n        return true\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount')\n        this.refreshTodos();\n        console.log(this.state)\n    }\n\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retrieveAllTodos(username)\n            .then(\n                response => {\n                    //console.log(response);\n                    this.setState({ todos: response.data })\n                }\n            )\n    }\n\n    deleteTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName()\n        //console.log(id + \" \" + username);\n        TodoDataService.deleteTodo(username, id)\n            .then(\n                response => {\n                    this.setState({ message: `Delete of todo ${id} Successful` })\n                    this.refreshTodos()\n                }\n            )\n\n    }\n\n    addTodoClicked() {\n        this.props.history.push(`/todos/-1`)\n    }\n\n    updateTodoClicked(id) {\n        console.log('update ' + id)\n        this.props.history.push(`/todos/${id}`)\n        // /todos/${id}\n        // let username = AuthenticationService.getLoggedInUserName()\n        // //console.log(id + \" \" + username);\n        // TodoDataService.deleteTodo(username, id)\n        //  .then (\n        //      response => {\n        //         this.setState({message : `Delete of todo ${id} Successful`})\n        //         this.refreshTodos()\n        //      }\n        //  )\n\n    }\n\n    render() {\n        console.log('render')\n        return (\n            <div>\n                <h1>List Todos</h1>\n                {this.state.message && <div class=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Target Date</th>\n                                <th>IsCompleted?</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todos.map(\n                                    todo =>\n                                        <tr key={todo.id}>\n                                            <td>{todo.description}</td>\n                                            <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                            <td>{todo.done.toString()}</td>\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.addTodoClicked}>Add</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent"]},"metadata":{},"sourceType":"module"}