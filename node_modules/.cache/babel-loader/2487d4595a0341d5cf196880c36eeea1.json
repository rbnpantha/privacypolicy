{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/src/components/questionanswer/DisplayContent.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./Posts.js\";\nimport Pagination from \"./Pagination.js\";\nimport { QA_API_URL } from \"../../Constants\";\n\nvar DisplayContent = function DisplayContent() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(5),\n      _useState8 = _slicedToArray(_useState7, 2),\n      postsPerPage = _useState8[0],\n      setPostsPerPage = _useState8[1];\n\n  useEffect(function () {\n    var fetchPosts =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.next = 3;\n                return axios.get(\"\".concat(QA_API_URL, \"/qa/all\"));\n\n              case 3:\n                res = _context.sent;\n                setPosts(res.data);\n                setLoading(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchPosts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchPosts();\n  }, []); //get current posts\n\n  var indexOfLastPost = currentPage * postsPerPage;\n  var indexOfFirstPost = indexOfLastPost - postsPerPage;\n  var currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); //change page\n\n  var paginate = function paginate(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-primary mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"My Questions\"), React.createElement(Posts, {\n    posts: currentPosts,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default DisplayContent;","map":{"version":3,"sources":["/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/src/components/questionanswer/DisplayContent.js"],"names":["React","useState","useEffect","axios","Posts","Pagination","QA_API_URL","DisplayContent","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","fetchPosts","get","res","data","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACDN,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,MACpBO,KADoB;AAAA,MACbC,QADa;;AAAA,mBAEGR,QAAQ,CAAC,KAAD,CAFX;AAAA;AAAA,MAEpBS,OAFoB;AAAA,MAEXC,UAFW;;AAAA,mBAGWV,QAAQ,CAAC,CAAD,CAHnB;AAAA;AAAA,MAGpBW,WAHoB;AAAA,MAGPC,cAHO;;AAAA,mBAIaZ,QAAQ,CAAC,CAAD,CAJrB;AAAA;AAAA,MAIpBa,YAJoB;AAAA,MAINC,eAJM;;AAM3Bb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBL,gBAAAA,UAAU,CAAC,IAAD,CAAV;AADiB;AAAA,uBAECR,KAAK,CAACc,GAAN,WAAaX,UAAb,aAFD;;AAAA;AAEXY,gBAAAA,GAFW;AAGjBT,gBAAAA,QAAQ,CAACS,GAAG,CAACC,IAAL,CAAR;AACAR,gBAAAA,UAAU,CAAC,KAAD,CAAV;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVK,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAMAA,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT,CAN2B,CAgB3B;;AACA,MAAMI,eAAe,GAAGR,WAAW,GAAGE,YAAtC;AACA,MAAMO,gBAAgB,GAAGD,eAAe,GAAGN,YAA3C;AACA,MAAMQ,YAAY,GAAGd,KAAK,CAACe,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB,CAnB2B,CAqB3B;;AACA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAC,UAAU;AAAA,WAAIZ,cAAc,CAACY,UAAD,CAAlB;AAAA,GAA3B;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,YAAd;AAA4B,IAAA,OAAO,EAAEZ,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEI,YADhB;AAEE,IAAA,UAAU,EAAEN,KAAK,CAACkB,MAFpB;AAGE,IAAA,QAAQ,EAAEF,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAWD,CAnCD;;AAqCA,eAAejB,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./Posts.js\";\nimport Pagination from \"./Pagination.js\";\nimport { QA_API_URL } from \"../../Constants\";\n\nconst DisplayContent = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(`${QA_API_URL}/qa/all`);\n      setPosts(res.data);\n      setLoading(false);\n    };\n    fetchPosts();\n  }, []);\n\n  //get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  //change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-primary mb-3\">My Questions</h1>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n\nexport default DisplayContent;\n"]},"metadata":{},"sourceType":"module"}