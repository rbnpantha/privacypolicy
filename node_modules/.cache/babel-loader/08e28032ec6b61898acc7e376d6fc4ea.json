{"ast":null,"code":"import _classCallCheck from \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/src/components/questionanswer/ListQnA.jsx\";\nimport React, { Component } from \"react\";\nimport QnADataService from \"../../api/qnaService/QnADataService\"; //import AuthenticationService from \"AuthenticationService\";\n//import moment from \"moment\";\n\nimport Sidebar from \"./Sidebar\";\n\nvar ListQnA =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListQnA, _Component);\n\n  function ListQnA(props) {\n    var _this;\n\n    _classCallCheck(this, ListQnA);\n\n    console.log(props.languageType);\n    console.log(\"constructor\");\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListQnA).call(this, props));\n    _this.state = {\n      QnAs: [],\n      message: null\n    };\n    _this.deleteQnAClicked = _this.deleteQnAClicked.bind(_assertThisInitialized(_this));\n    _this.updateQnAClicked = _this.updateQnAClicked.bind(_assertThisInitialized(_this));\n    _this.addQnAClicked = _this.addQnAClicked.bind(_assertThisInitialized(_this));\n    _this.refreshQnAs = _this.refreshQnAs.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ListQnA, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"componentWillUnmount\");\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      console.log(\"shouldComponentUpdate\");\n      console.log(nextProps);\n      console.log(nextState);\n      return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"componentDidMount\");\n      this.refreshQnAs();\n      console.log(this.state);\n    }\n  }, {\n    key: \"refreshQnAs\",\n    value: function refreshQnAs() {\n      var _this2 = this;\n\n      //let username = AuthenticationService.getLoggedInUserName();\n      var languageType = this.props.languageType;\n      console.log(languageType);\n      QnADataService.retrieveQnAsByType(languageType).then(function (response) {\n        console.log(\"response is \" + response);\n\n        _this2.setState({\n          QnAs: response.data\n        });\n      });\n    }\n  }, {\n    key: \"deleteQnAClicked\",\n    value: function deleteQnAClicked(id) {\n      var _this3 = this;\n\n      //let username = AuthenticationService.getLoggedInUserName();\n      //console.log(id + \" \" + username);\n      QnADataService.deleteQnA(id).then(function (response) {\n        _this3.setState({\n          message: \"Delete of QnA \".concat(id, \" Successful\")\n        });\n\n        _this3.refreshQnAs();\n      });\n    }\n  }, {\n    key: \"addQnAClicked\",\n    value: function addQnAClicked() {\n      this.props.history.push(\"/todos/-1\");\n    }\n  }, {\n    key: \"updateQnAClicked\",\n    value: function updateQnAClicked(id) {\n      console.log(\"update \" + id);\n      this.props.history.push(\"/todos/\".concat(id)); // /todos/${id}\n      // let username = AuthenticationService.getLoggedInUserName()\n      // //console.log(id + \" \" + username);\n      // TodoDataService.deleteTodo(username, id)\n      //  .then (\n      //      response => {\n      //         this.setState({message : `Delete of todo ${id} Successful`})\n      //         this.refreshTodos()\n      //      }\n      //  )\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"render\");\n      console.log(this.props.languageType);\n      console.log(this.props);\n      var items = [{\n        name: \"home\",\n        label: \"Home\"\n      }, {\n        name: \"billing\",\n        label: \"Billing\",\n        items: [{\n          name: \"statements\",\n          label: \"Statements\"\n        }, {\n          name: \"reports\",\n          label: \"Reports\"\n        }]\n      }, {\n        name: \"settings\",\n        label: \"Settings\",\n        items: [{\n          name: \"profile\",\n          label: \"Profile\"\n        }]\n      }];\n      var count = 1;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        className: \"float-left\",\n        items: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.state.QnAs.map(function (qns) {\n        return React.createElement(\"div\", {\n          className: \"mt-4\",\n          key: qns.questionId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, count++, \". \", qns.question), React.createElement(\"h5\", {\n          className: \"text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, qns.answer));\n      }))));\n    }\n  }]);\n\n  return ListQnA;\n}(Component);\n\nexport default ListQnA;","map":{"version":3,"sources":["/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/src/components/questionanswer/ListQnA.jsx"],"names":["React","Component","QnADataService","Sidebar","ListQnA","props","console","log","languageType","state","QnAs","message","deleteQnAClicked","bind","updateQnAClicked","addQnAClicked","refreshQnAs","nextProps","nextState","retrieveQnAsByType","then","response","setState","data","id","deleteQnA","history","push","items","name","label","count","map","qns","questionId","question","answer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport QnADataService from \"../../api/qnaService/QnADataService\";\n//import AuthenticationService from \"AuthenticationService\";\n//import moment from \"moment\";\nimport Sidebar from \"./Sidebar\";\n\nclass ListQnA extends Component {\n  constructor(props) {\n    console.log(props.languageType);\n    console.log(\"constructor\");\n    super(props);\n    this.state = {\n      QnAs: [],\n      message: null\n    };\n    this.deleteQnAClicked = this.deleteQnAClicked.bind(this);\n    this.updateQnAClicked = this.updateQnAClicked.bind(this);\n    this.addQnAClicked = this.addQnAClicked.bind(this);\n    this.refreshQnAs = this.refreshQnAs.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"shouldComponentUpdate\");\n    console.log(nextProps);\n    console.log(nextState);\n    return true;\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    this.refreshQnAs();\n    console.log(this.state);\n  }\n\n  refreshQnAs() {\n    //let username = AuthenticationService.getLoggedInUserName();\n    const languageType = this.props.languageType;\n    console.log(languageType);\n    QnADataService.retrieveQnAsByType(languageType).then(response => {\n      console.log(\"response is \" + response);\n      this.setState({ QnAs: response.data });\n    });\n  }\n\n  deleteQnAClicked(id) {\n    //let username = AuthenticationService.getLoggedInUserName();\n    //console.log(id + \" \" + username);\n    QnADataService.deleteQnA(id).then(response => {\n      this.setState({ message: `Delete of QnA ${id} Successful` });\n      this.refreshQnAs();\n    });\n  }\n\n  addQnAClicked() {\n    this.props.history.push(`/todos/-1`);\n  }\n\n  updateQnAClicked(id) {\n    console.log(\"update \" + id);\n    this.props.history.push(`/todos/${id}`);\n    // /todos/${id}\n    // let username = AuthenticationService.getLoggedInUserName()\n    // //console.log(id + \" \" + username);\n    // TodoDataService.deleteTodo(username, id)\n    //  .then (\n    //      response => {\n    //         this.setState({message : `Delete of todo ${id} Successful`})\n    //         this.refreshTodos()\n    //      }\n    //  )\n  }\n\n  render() {\n    console.log(\"render\");\n    console.log(this.props.languageType);\n    console.log(this.props);\n\n    const items = [\n      { name: \"home\", label: \"Home\" },\n      {\n        name: \"billing\",\n        label: \"Billing\",\n        items: [\n          { name: \"statements\", label: \"Statements\" },\n          { name: \"reports\", label: \"Reports\" }\n        ]\n      },\n      {\n        name: \"settings\",\n        label: \"Settings\",\n        items: [{ name: \"profile\", label: \"Profile\" }]\n      }\n    ];\n\n    let count = 1;\n    return (\n      <div>\n        <Sidebar className=\"float-left\" items={items} />\n        <div className=\"container\">\n          <div>\n            {this.state.QnAs.map(qns => (\n              <div className=\"mt-4\" key={qns.questionId}>\n                <h2 className=\"text-left\">\n                  {count++}. {qns.question}\n                </h2>\n                <h5 className=\"text-left\">{qns.answer}</h5>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListQnA;\n"]},"metadata":{},"sourceType":"module"}