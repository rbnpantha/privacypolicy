{"ast":null,"code":"import _defineProperty from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import AuthenticationService from'./AuthenticationService.js';var LoginComponent=/*#__PURE__*/function(_Component){_inherits(LoginComponent,_Component);function LoginComponent(props){var _this;_classCallCheck(this,LoginComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(LoginComponent).call(this,props));_this.state={username:'in28minutes',password:'',hasLoginFailed:false,showSuccessMessage:false};// this.handleUsernameChange = this.handleUsernameChange.bind(this)\n// this.handlePasswordChange = this.handlePasswordChange.bind(this)\n_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.loginClicked=_this.loginClicked.bind(_assertThisInitialized(_this));return _this;}_createClass(LoginComponent,[{key:\"handleChange\",value:function handleChange(event){//console.log(this.state);\nthis.setState(_defineProperty({},event.target.name,event.target.value));}// handleUsernameChange(event) {\n//     console.log(event.target.name);\n//     this.setState(\n//         {\n//             [event.target.name]\n//               :event.target.value\n//         }\n//     )\n// }\n// handlePasswordChange(event) {\n//     console.log(event.target.value);\n//     this.setState({password:event.target.value})\n// }\n},{key:\"loginClicked\",value:function loginClicked(){var _this2=this;//in28minutes,dummy\n// if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n//     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n//     this.props.history.push(`/welcome/${this.state.username}`)\n//     //this.setState({showSuccessMessage:true})\n//     //this.setState({hasLoginFailed:false})\n// }\n// else {\n//     this.setState({showSuccessMessage:false})\n//     this.setState({hasLoginFailed:true})\n// }\n// AuthenticationService\n// .executeBasicAuthenticationService(this.state.username, this.state.password)\n// .then(() => {\n//     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n//     this.props.history.push(`/welcome/${this.state.username}`)\n// }).catch( () =>{\n//     this.setState({showSuccessMessage:false})\n//     this.setState({hasLoginFailed:true})\n// })\nAuthenticationService.executeJwtAuthenticationService(this.state.username,this.state.password).then(function(response){AuthenticationService.registerSuccessfulLoginForJwt(_this2.state.username,response.data.token);_this2.props.history.push(\"/welcome/\".concat(_this2.state.username));}).catch(function(){_this2.setState({showSuccessMessage:false});_this2.setState({hasLoginFailed:true});});}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Login\"),React.createElement(\"div\",{className:\"container\"},this.state.hasLoginFailed&&React.createElement(\"div\",{className:\"alert alert-warning\"},\"Invalid Credentials\"),this.state.showSuccessMessage&&React.createElement(\"div\",null,\"Login Sucessful\"),\"User Name: \",React.createElement(\"input\",{type:\"text\",name:\"username\",value:this.state.username,onChange:this.handleChange}),\"Password: \",React.createElement(\"input\",{type:\"password\",name:\"password\",value:this.state.password,onChange:this.handleChange}),React.createElement(\"button\",{className:\"btn btn-success\",onClick:this.loginClicked},\"Login\")));}}]);return LoginComponent;}(Component);export default LoginComponent;","map":{"version":3,"sources":["/Users/rabin/DeploymentTests/pcf-crash-course-with-spring-boot-master/04-spring-boot-react-full-stack-h2/frontend/todo-app/src/components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch"],"mappings":"27CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,4BAAlC,C,GAEMC,CAAAA,c,wEAEF,wBAAYC,KAAZ,CAAmB,gDACf,gFAAMA,KAAN,GAEA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,aADD,CAETC,QAAQ,CAAE,EAFD,CAGTC,cAAc,CAAE,KAHP,CAITC,kBAAkB,CAAE,KAJX,CAAb,CAMA;AACA;AACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB,CAZe,aAalB,C,6EAEYE,K,CAAO,CAChB;AACA,KAAKC,QAAL,oBAESD,KAAK,CAACE,MAAN,CAAaC,IAFtB,CAGcH,KAAK,CAACE,MAAN,CAAaE,KAH3B,GAMH,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;mDAEe,iBACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,qBAAqB,CAChBgB,+BADL,CACqC,KAAKb,KAAL,CAAWC,QADhD,CAC0D,KAAKD,KAAL,CAAWE,QADrE,EAEKY,IAFL,CAEU,SAACC,QAAD,CAAc,CAChBlB,qBAAqB,CAACmB,6BAAtB,CAAoD,MAAI,CAAChB,KAAL,CAAWC,QAA/D,CAAyEc,QAAQ,CAACE,IAAT,CAAcC,KAAvF,EACA,MAAI,CAACnB,KAAL,CAAWoB,OAAX,CAAmBC,IAAnB,oBAAoC,MAAI,CAACpB,KAAL,CAAWC,QAA/C,GACH,CALL,EAKOoB,KALP,CAKa,UAAM,CACX,MAAI,CAACZ,QAAL,CAAc,CAAEL,kBAAkB,CAAE,KAAtB,CAAd,EACA,MAAI,CAACK,QAAL,CAAc,CAAEN,cAAc,CAAE,IAAlB,CAAd,EACH,CARL,EAUH,C,uCAEQ,CACL,MACI,gCACI,sCADJ,CAEI,2BAAK,SAAS,CAAC,WAAf,EAEK,KAAKH,KAAL,CAAWG,cAAX,EAA6B,2BAAK,SAAS,CAAC,qBAAf,wBAFlC,CAGK,KAAKH,KAAL,CAAWI,kBAAX,EAAiC,iDAHtC,eAKe,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,UAAxB,CAAmC,KAAK,CAAE,KAAKJ,KAAL,CAAWC,QAArD,CAA+D,QAAQ,CAAE,KAAKI,YAA9E,EALf,cAMc,6BAAO,IAAI,CAAC,UAAZ,CAAuB,IAAI,CAAC,UAA5B,CAAuC,KAAK,CAAE,KAAKL,KAAL,CAAWE,QAAzD,CAAmE,QAAQ,CAAE,KAAKG,YAAlF,EANd,CAOI,8BAAQ,SAAS,CAAC,iBAAlB,CAAoC,OAAO,CAAE,KAAKE,YAAlD,UAPJ,CAFJ,CADJ,CAcH,C,4BA3FwBX,S,EA8F7B,cAAeE,CAAAA,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: 'in28minutes',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        //console.log(this.state);\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    // handleUsernameChange(event) {\n    //     console.log(event.target.name);\n    //     this.setState(\n    //         {\n    //             [event.target.name]\n    //               :event.target.value\n    //         }\n    //     )\n    // }\n\n    // handlePasswordChange(event) {\n    //     console.log(event.target.value);\n    //     this.setState({password:event.target.value})\n    // }\n\n    loginClicked() {\n        //in28minutes,dummy\n        // if(this.state.username==='in28minutes' && this.state.password==='dummy'){\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n        //     this.props.history.push(`/welcome/${this.state.username}`)\n        //     //this.setState({showSuccessMessage:true})\n        //     //this.setState({hasLoginFailed:false})\n        // }\n        // else {\n        //     this.setState({showSuccessMessage:false})\n        //     this.setState({hasLoginFailed:true})\n        // }\n\n        // AuthenticationService\n        // .executeBasicAuthenticationService(this.state.username, this.state.password)\n        // .then(() => {\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n        //     this.props.history.push(`/welcome/${this.state.username}`)\n        // }).catch( () =>{\n        //     this.setState({showSuccessMessage:false})\n        //     this.setState({hasLoginFailed:true})\n        // })\n        AuthenticationService\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                this.props.history.push(`/welcome/${this.state.username}`)\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}